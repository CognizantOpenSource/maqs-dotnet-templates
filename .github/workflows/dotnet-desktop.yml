name: Package

on:
  push:
    branches: 
      - master
      - TroyWalshProf-patch-1
    
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:
    inputs:
      override:
        description: 'Version Number'     
        required: true
        default: '0.0.0'
      tags:
        description: 'Manual'  

jobs:

  build:

    runs-on: windows-latest 
    env:
      Solution_Name: Extensions\OpenSourceExtension.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: GetVersion
      id: ver
      if: github.event.inputs.override == null
      shell: pwsh
      run: |
            Write-Host {{ github.event.inputs.override }}
            $endPoint = "https://api.github.com/repos/magenic/MAQS/releases/latest"
            $info = Invoke-RestMethod -Uri $endPoint
            $version = $info.name.Trim("v")
            $version = "::set-output name=BUILD_NUMBER::$($version)"
            echo $version
 
    - name: CreateNuGetTemplate
      run: nuget.exe pack .\Extensions\CoreTemplates\QATBaseTemplate.nuspec -NonInteractive -OutputDirectory "${{github.workspace}}/artifact/NuGet/" -Properties Configuration=release -Symbols -version ${{ steps.ver.outputs.BUILD_NUMBER }} -Verbosity Detailed
      shell: pwsh
      
    - uses: actions/upload-artifact@v2
      if: always()
      name: "Upload artifacts"
      with:
        name: nuget
        path: |
          artifact/NuGet/*.*

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add the template data to the template zip files
    - uses: actions/checkout@v1
    - name: Run zip
      run: ./TemplateZip.ps1
      shell: pwsh

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: SetVersion
      id: setVer
      shell: pwsh
      run: |
            Get-ChildItem *.vsixmanifest -recurse | foreach { 
            $FullPath =  [System.IO.Path]::GetFullPath($_)
            Write-Host $FullPath
            [xml]$content = Get-Content $FullPath
            $content.PackageManifest.Metadata.Identity.Version
            $content.PackageManifest.Metadata.Identity.Version = "${{ steps.ver.outputs.BUILD_NUMBER }}"
            $content.PackageManifest.Metadata.Identity.Version
            $content.Save($FullPath)
            }

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the VSIX package
      run: msbuild $env:Solution_Name /p:Configuration=release /p:OutputPath="${{github.workspace}}/artifact/VSIX/" 

    - uses: actions/upload-artifact@v2
      if: always()
      name: "Upload artifacts"
      with:
        name: vsix
        path: |
          artifact/VSIX/*.*
          
    
    - name: Run Core Tests
      shell: pwsh
      run: |
            dotnet new -i "${{github.workspace}}/artifact/NuGet/Magenic.Maqs.Templates.${{ steps.ver.outputs.BUILD_NUMBER }}.nupkg"
            mkdir Appium
            cd Appium
            dotnet new Maqs.Appium
            dotnet test


    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    #- name: Upload build artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: MSIX Package
    #    path: ${{ env.Wap_Project_Directory }}\AppPackages
